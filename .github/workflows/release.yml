name: build-and-release-rpm

on:
  push:
    tags: ["v*"]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        fedora: [41, 42] # choose the Fedora majors you support
    container:
      image: fedora:${{ matrix.fedora }}
    steps:
      - uses: actions/checkout@v4
      - name: clone open-quantum-safe/openssh
        uses: actions/checkout@v4
        with:
          repository: open-quantum-safe/openssh
          path: openssh
          ref: OQS-v10
      - name: clone open-quantum-safe/liboqs
        uses: actions/checkout@v4
        with:
          repository: open-quantum-safe/liboqs
          path: openssh/oqs-scripts/tmp/liboqs
          ref: main
      - name: install toolchain
        run: >
          dnf install -y
          autoconf
          automake
          cmake
          gcc
          libfido2-devel
          liboqs-devel
          libtool
          make
          ninja-build
          openssl-devel
          patchelf
          pkgconfig
          rpm-build
          zlib-devel
      - name: create sshd privilege separation user
        run: |
          mkdir -p -m 0755 /var/empty
          groupadd sshd
          useradd --gid sshd --comment 'sshd privsep' --home-dir /var/empty --no-create-home --shell /bin/false sshd
      - name: build open-quantum-safe/liboqs
        working-directory: openssh
        run: oqs-scripts/build_liboqs.sh
      - name: stage open-quantum-safe/liboqs
        working-directory: openssh
        run: ln -s oqs/lib64 oqs/lib
      - name: build open-quantum-safe/openssh
        working-directory: openssh
        env:
          FEDORA_MAJOR: ${{ matrix.fedora }}
          OPENSSL_SYS_DIR: /usr
          PREFIX_BASE: /opt/oqs-openssh
          BUILDROOT: ./pkgroot
          LD_LIBRARY_PATH: ./oqs/lib64:./oqs/lib
        run: oqs-scripts/build_openssh.sh
      - name: stage open-quantum-safe/openssh
        id: stage
        working-directory: openssh
        env:
          FEDORA_MAJOR: ${{ matrix.fedora }}
          OPENSSL_SYS_DIR: /usr
          PREFIX_BASE: /opt/oqs-openssh
          BUILDROOT: ./pkgroot
          LD_LIBRARY_PATH: ./oqs-test/tmp/lib:./oqs-test/tmp/lib64:./oqs/lib:./oqs/lib64
        run: |
          VERSION=$(oqs-test/tmp/bin/ssh -V 2>&1 \
            | cut -d , -f 1 \
            | cut -d _ -f 2- \
            | sed '0,/-/s//_/' \
            | sed 's/-//g')
          # stage to /opt/oqs-openssh-<ver>
          DEST="$BUILDROOT$PREFIX_BASE-$VERSION"
          mkdir -p "$DEST"
          cp -a oqs-test/tmp/* "$DEST"/
          ln -sfn "oqs-openssh-$VERSION" "$BUILDROOT$PREFIX_BASE"
          mapfile -t elfs < <(find "$DEST" -type f -print0 | xargs -0 file | grep -E 'ELF .* (executable|shared object)' | cut -d: -f1)
          for f in "${elfs[@]}"; do
            patchelf --force-rpath --set-rpath '$ORIGIN/../lib:$ORIGIN/../lib64' "$f"
          done
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
      - name: build package
        run: |
          mkdir -p $GITHUB_WORKSPACE/rpmbuild/{BUILD,RPMS,SOURCES,SPECS,SRPMS}
          rpmbuild -bb SPECS/oqs-openssh.spec \
            --define "version ${{ steps.stage.outputs.VERSION }}" \
            --define "_topdir $GITHUB_WORKSPACE/rpmbuild" \
            --define "_sourcedir $GITHUB_WORKSPACE/openssh"
          ls -al $GITHUB_WORKSPACE/rpmbuild/RPMS/x86_64
      - name: upload rpm artifact
        uses: actions/upload-artifact@v4
        with:
          name: rpm-fedora-${{ matrix.fedora }}
          path: rpmbuild/RPMS/x86_64/*.rpm
          if-no-files-found: error

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist
      - name: create checksums
        run: |
          cd dist
          find . -name "*.rpm" -type f -exec sha256sum {} \; > SHA256SUMS.txt
      - name: create github release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/**/**/*.rpm
            dist/SHA256SUMS.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
